START -> PROGRAM VAR_BODY

PROGRAM -> P STR_SC
STR_SC -> S SC

VAR_BODY -> VAR BODY

BODY -> BEGIN_BODY END_DOT

BEGIN_BODY -> B M
END_DOT -> E DOT

VAR -> V VAR_BODY

VAR_BODY -> VAR_NAME VAR_DECLARE
VAR_NAME -> S C
VAR_NAME -> VAR_M C
VAR_M -> VAR_M_B VAR_M
VAR_M -> S KOMA
VAR_DECLARE -> DECLARE VAR_BODY
DECLARE -> TYPE SC

BEG -> BEGIN_BODY END_SC
END_SC -> E SC

M -> ASSIGNMENT
M -> IFTH
M -> RU
M -> WD
M -> FT
M -> IO

M -> ASSIGNMENT M
M -> IFTH M
M -> RU M
M -> WD M
M -> FT M
M -> IO M

TYPE -> REAL
TYPE -> INT
TYPE -> CHAR
REAL -> real
INT -> integer
CHAR -> char
TYPE -> ARRAY_SIZE ARRAY_TYPE
ARRAY_SIZE -> A SIZE
ARRAY_TYPE -> O TYPEARR
TYPEARR -> REAL
TYPEARR -> INT
TYPEARR -> CHAR
TYPEARR -> ARRAY_SIZE MATRIKS_TYPE
MATRIKS_TYPE -> O TYPEM
TYPEM -> REAL
TYPEM -> INT
TYPEM -> CHAR
SIZE -> SIZE_FIRST SIZE_LAST
SIZE_FIRST -> SB S
SIZE_LAST -> SIZE_BETWEEN S
SIZE_BETWEEN -> DOT DOT

OPCOMPARE -> LB
OPCOMPARE -> LB EQ
OPCOMPARE -> LK EQ
OPCOMPARE -> LK
OPCOMPARE -> EQ
OPCOMPARE -> LK LB
OPCOMPARE -> AND
OPCOMPARE -> OR

ASSIGNMENT -> ASSIGNMENT_FIRST
ASSIGNMENT_FIRST -> S ASS
ASSIGNMENT_EXPR -> S EXPR_SC
EXPR_SC -> EXPR SC

EXPR -> EXPR_A EXPR_F
EXPR_F -> EXPR_F_A EXPR_F
EXPR_F -> EXPR_F_A
EXPR_F -> EXPR_A
EXPR_F_A -> OP EXPR_A
EXPR_A -> EXPR_A_A EXPR_A_F
EXPR_A_A -> KB EXPR_A
EXPR_A_F -> EXPR_A_F_A KT
EXPR_A_F_A -> OP EXPR
EXPR_A -> S



IFTH -> IF_COND THEN_BEG
IFTH -> IF_COND IF_ELSE
IFTH -> IF_COND IF_IF

IF_COND -> I COND
THEN_BEG -> T BEG
IF_ELSE -> THEN_BEG ELSE_BEG
ELSE_BEG -> EL BEG
IF_IF -> EL IFTH

RU -> R_BODY UNTIL_COND
R_BODY -> R M
UNTIL_COND -> U COND_SC
COND_SC -> COND SC

WD -> WHILE_OP DO_BODY
WHILE_OP -> W COND
DO_BODY -> D BEG

COND -> CONDLOGIC
CONDLOGIC -> S 
CONDLOGIC -> S_COMPARE CONDLOGIC
S_COMPARE -> S OPCOMPARE

FT -> F_COND DO_BODY
F_COND -> F F_COND_BODY
F_COND_BODY -> ASSIGNMENT_TO S_STEP
ASSIGNMENT_TO -> ASSIGNMENT TO
S_STEP -> S STEP
S_STEP -> S
STEP -> ST S
TO -> to
TO -> DT
IO -> INP IO_BODY
IO -> OUT IO_BODY
IO_BODY -> IO_FIRST KT
IO_FIRST -> KB EXPR
ASS -> C EQ

DT -> downto
INP -> input
OUT -> output
ST -> step
R -> repeat
U -> until
D -> do
W -> while
F -> for
I -> if
T -> then
EL -> else
SB -> [
ST -> ]
EQ -> =
A -> array
B -> begin
E -> end
P -> program
SC -> ;
C -> :
DOT -> .
KOMA -> ,
S -> alfanumeric
KB -> (
KT -> )
V -> var
O -> of
OP -> +
OP -> -
OP -> *
OP -> div
OP -> mod
OP -> and
OP -> or
OP -> >
OP -> <
OP -> <>
OP -> <=
OP -> >=
